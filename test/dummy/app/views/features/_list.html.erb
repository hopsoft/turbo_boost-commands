<div class="my-12 space-y-8 md:grid md:grid-cols-2 md:gap-12 md:my-20 md:space-y-0 lg:grid-cols-3">
  <div class="feature">
    <div class="icon">
      <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 18">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m5 5 4 4-4 4m5 0h5M2 1h16a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1Z"/>
      </svg>
    </div>
    <h3>Seamless Integrations</h3>
    <p>
      With TurboBoost <em class="subtle">Commands</em>, there's no need to reinvent the wheel.
      Our tools are made to work perfectly with both Rails and Hotwire to enhance your existing workflow.
      You can introduce these game-changing techniques gradually to your current projects with <em>zero risk</em>.
    </p>
  </div>

  <div class="feature">
    <div class="icon">
      <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="14" height="20" fill="none" viewBox="0 0 14 20">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7a3 3 0 0 1 3-3M5 19h4m0-3c0-4.1 4-4.9 4-9A6 6 0 1 0 1 7c0 4 4 5 4 9h4Z"/>
      </svg>
    </div>
    <h3>Conventional Concepts</h3>
    <p>
      If you're familiar with popular client-side frameworks, you'll breeze through TurboBoost <em class="subtle">Commands</em>...
      where server-side rendering and state management <em>reduce the complexity</em> of triggering events, changing state, and re-rendering.
      Say goodbye to convoluted JavaScript.
    </p>
  </div>

  <div class="feature">
    <div class="icon">
      <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 16">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"/>
      </svg>
    </div>
    <h3>Reliable Protocols</h3>
    <p>
      TurboBoost <em class="subtle">Commands</em> run over standard HTTP, offering unparalleled robustness.
      That means the same tools you use for monitoring and debugging normal web requests also work for your reactive features...
      so you can build performant, reliable, and <em>great user experiences</em>.
    </p>
  </div>

  <div class="feature">
    <div class="icon">
      <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 20">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5h8m-1-3a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1m6 0v3H6V2m6 0h4a1 1 0 0 1 1 1v15a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h4m0 9.464 2.025 1.965L12 9.571"/>
      </svg>
    </div>
    <h3>Standard Mechanics</h3>
    <p>
      Integrating TurboBoost <em class="subtle">Commands</em> into your Rails application is as <em>easy as pie</em>.
      Commands are plain Ruby methods that get called by a Rails controller <code>before_action</code>.
      After they perform some discrete business logic, normal Rails behavior resumes control.
      It couldn't be simpler.
    </p>
  </div>

  <div class="feature">
    <div class="icon">
      <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 22 21">
        <path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7.24 7.194a24.16 24.16 0 0 1 3.72-3.062m0 0c3.443-2.277 6.732-2.969 8.24-1.46 2.054 2.053.03 7.407-4.522 11.959-4.552 4.551-9.906 6.576-11.96 4.522C1.223 17.658 1.89 14.412 4.121 11m6.838-6.868c-3.443-2.277-6.732-2.969-8.24-1.46-2.054 2.053-.03 7.407 4.522 11.959m3.718-10.499a24.16 24.16 0 0 1 3.719 3.062M17.798 11c2.23 3.412 2.898 6.658 1.402 8.153-1.502 1.503-4.771.822-8.2-1.433m1-6.808a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"/>
      </svg>
    </div>
    <h3>Hybrid Solutions</h3>
    <p>
      Strict REST semantics for everything can have diminishing returns.
      TurboBoost <em class="subtle">Commands</em> give you <em>more flexibility</em> by allowing you to "sprinkle"
      in remote procedure calls (RPC) when needed, reducing boilerplate and helping you focus on the task at hand.
    </p>
  </div>

  <div class="feature">
    <div class="icon">
      <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 19 20">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2 9.376v.786l8 3.925 8-3.925v-.786M1.994 14.191v.786l8 3.925 8-3.925v-.786M10 1.422 2 5.347l8 3.925 8-3.925-8-3.925Z"/>
      </svg>
    </div>
    <h3>Isolated Concerns</h3>
    <p>
      Developing a <em>clean and maintainable</em> codebase is crucial.
      TurboBoost <em class="subtle">Commands</em> help you avoid non-RESTful routes and minimize fat models and controllers.
      Commands help you write less code that's more organized, testable, and sustainable.
    </p>
  </div>
</div>

<div class="max-w-screen-md">
  <a href="#" class="inline-flex justify-center items-center py-3 px-5 mr-3 text-base font-medium text-center text-white rounded-lg focus:ring-4 bg-primary-700 dark:focus:ring-primary-900 hover:bg-primary-800 focus:ring-primary-300">
    Get started
    <svg class="ml-2 -mr-1 w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
  </a>
</div>
