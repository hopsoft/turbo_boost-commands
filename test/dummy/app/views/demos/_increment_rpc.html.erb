<div id="rpc">
  <%= render "stats/stats", id: "rpc-stats" do %>
    <%= render "stats/stat", label: "Counter", value: session[:rpc_count].to_i, class: "!bg-indigo-600 dark:!bg-indigo-900",
      value_class: ["!text-indigo-200 dark:!text-indigo-300"], label_class: ["!text-indigo-400 dark:!text-indigo-500"] %>
  <% end %>

  <p class="mt-8 mb-4">
    You can also use TurboReflex without explicitly defining Turbo Frames.
    This reduces the complexity related to architecting with frames and eliminates the proliferation of frame related boilerplate code in your app.
  </p>
  <p class="mt-4 mb-8">
    We call this feature <span class="text-blue-500">RPC over HTTP</span> which uses a frame dedicated for this purpose.
  </p>

  <%= button_tag class: css("flowbite.button.cyan_to_blue", "block mb-8 ml-0 relative"),
    data: { turbo_reflex: "IncrementRpcReflex#increment", turbo_frame: "turbo-reflex-frame" } do %>
    RPC over HTTP
    <%= render flowbite(:notification_badge), value: session[:rpc_count].to_i if session[:rpc_count].to_i > 0 %>
  <% end %>
</div>
