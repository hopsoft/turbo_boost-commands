{
  "version": 3,
  "sources": ["../../javascript/turbo_reflex.js"],
  "sourcesContent": ["const registeredEvents = {}\nconst turboFrameSources = {}\n\naddEventListener('turbo:frame-render', event => {\n  const frameId = event.target.id\n  const { location } = event.detail.fetchResponse\n  if (frameId && location) turboFrameSources[frameId] = location.href\n})\n\naddEventListener('turbo:frame-load', event => {\n  const frame = event.target\n  const src = event.target.src || turboFrameSources[frame.id]\n  frame.dataset.turboReflexFrameSrc = src\n  delete turboFrameSources[frame.id]\n})\n\nfunction isMatch (eventName, tagName) {\n  tagName = tagName.toLowerCase()\n  return (\n    registeredEvents[eventName].includes(tagName) ||\n    (!Object.values(registeredEvents)\n      .flat()\n      .includes(tagName) &&\n      registeredEvents[eventName].includes('*'))\n  )\n}\n\nfunction getFrameId (reflexElement) {\n  let frameId =\n    reflexElement.dataset.turboReflexFrame || reflexElement.dataset.turboFrame\n  if (!frameId) {\n    const frame = reflexElement.closest('turbo-frame')\n    if (frame) frameId = frame.id\n  }\n  if (!frameId)\n    console.error(\n      `The reflex element does not specify a frame!`,\n      `Please move the reflex element inside a <turbo-frame> or set either the 'data-turbo-reflex-frame' or 'data-turbo-frame' attribute.`,\n      reflexElement\n    )\n  return frameId\n}\n\nfunction getFrameElement (frameId) {\n  const frameElement = document.getElementById(frameId)\n  if (!frameElement) console.error(`The frame '${frameId}' does not exist!`)\n  return frameElement\n}\n\nfunction getFrameSrc (frameElement) {\n  const frameSrc = frameElement.dataset.turboReflexFrameSrc\n  if (!frameSrc)\n    console.error(\n      `The 'data-turbo-reflex-frame-src' attribute for the frame '${frameId}' is not set!`,\n      `This attribute is set automatically for frames that load their content after being inserted into the DOM;`,\n      `however, frames that eager load their content server side on initial page render must set this attribute explicitly.`,\n      frameElement\n    )\n  return frameSrc\n}\n\nfunction getTurboReflexToken () {\n  return document.getElementById('turbo-reflex-token').getAttribute('content')\n}\n\nfunction getURL (value) {\n  const a = document.createElement('a')\n  a.href = value\n  return new URL(a)\n}\n\nfunction getAttributes (reflexElement) {\n  const reflexElementAttributes = Array.from(reflexElement.attributes).reduce(\n    (memo, attribute) => {\n      if (!attribute.name.includes('data-turbo-reflex'))\n        memo[attribute.name] = attribute.value\n      return memo\n    },\n    {}\n  )\n  reflexElementAttributes.tagName = reflexElement.tagName\n  reflexElementAttributes.value = reflexElement.value\n  return reflexElementAttributes\n}\n\nfunction invokeReflex (event) {\n  const reflexElement = event.target.closest('[data-turbo-reflex]')\n  if (!reflexElement) return\n  if (!isMatch(event.type, reflexElement.tagName)) return\n\n  const frameId = getFrameId(reflexElement)\n  if (!frameId) return\n\n  const frameElement = getFrameElement(frameId)\n  if (!frameElement) return\n\n  const frameSrc = getFrameSrc(frameElement)\n  if (!frameSrc) return\n\n  const reflexPayload = {\n    token: getTurboReflexToken(),\n    name: reflexElement.dataset.turboReflex,\n    frame: frameId,\n    element: getAttributes(reflexElement)\n  }\n\n  if (reflexElement.tagName.toLowerCase() === 'form') {\n    const input = document.createElement('input')\n    input.type = 'hidden'\n    input.name = 'turbo_reflex'\n    input.value = JSON.stringify(reflexPayload)\n    reflexElement.appendChild(input)\n  } else {\n    event.preventDefault()\n    event.stopPropagation()\n    const frameURL = getURL(frameSrc)\n    frameURL.searchParams.set('turbo_reflex', JSON.stringify(reflexPayload))\n    frameElement.src = frameURL.toString()\n  }\n}\n\nfunction registerEvent (eventName, tagNames) {\n  registeredEvents[eventName] = tagNames\n  document.removeEventListener(eventName, invokeReflex, true)\n  document.addEventListener(eventName, invokeReflex, true)\n}\n\nregisterEvent('change', ['input', 'select', 'textarea'])\nregisterEvent('submit', ['form'])\nregisterEvent('click', ['*'])\n\nexport default { registerEvent, registeredEvents }\n"],
  "mappings": "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",
  "names": ["registeredEvents", "turboFrameSources", "event", "frameId", "location", "frame", "src", "isMatch", "eventName", "tagName", "getFrameId", "reflexElement", "getFrameElement", "frameElement", "getFrameSrc", "frameSrc", "getTurboReflexToken", "getURL", "value", "a", "getAttributes", "reflexElementAttributes", "memo", "attribute", "invokeReflex", "reflexPayload", "input", "frameURL", "registerEvent", "tagNames", "turbo_reflex_default"]
}
