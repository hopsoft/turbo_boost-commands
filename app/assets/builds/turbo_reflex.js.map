{
  "version": 3,
  "sources": ["../../javascript/activity.js", "../../javascript/lifecycle.js", "../../javascript/elements.js", "../../javascript/turbo.js", "../../javascript/delegates.js", "../../javascript/drivers/form.js", "../../javascript/urls.js", "../../javascript/drivers/frame.js", "../../javascript/drivers/window.js", "../../javascript/drivers/index.js", "../../javascript/logger.js", "../../javascript/uuids.js", "../../javascript/index.js"],
  "sourcesContent": ["const active = {}\n\nfunction add (payload) {\n  active[payload.id] = payload\n}\n\nfunction remove (id) {\n  delete active[id]\n}\n\nexport default {\n  add,\n  remove,\n  get reflexes () {\n    return [...Object.values(active)]\n  },\n  get length () {\n    return Object.keys(active).length\n  }\n}\n", "import activity from './activity'\n\nconst events = {\n  beforeStart: 'turbo-reflex:before-start',\n  start: 'turbo-reflex:start',\n  success: 'turbo-reflex:success',\n  finish: 'turbo-reflex:finish',\n  abort: 'turbo-reflex:abort',\n  clientError: 'turbo-reflex:client-error',\n  serverError: 'turbo-reflex:server-error',\n  missingFrame: 'turbo-reflex:missing-frame',\n  missingFrameSrc: 'turbo-reflex:missing-frame-src'\n}\n\nfunction dispatch (name, target = document, detail = {}, raise = false) {\n  try {\n    target = target || document\n    const event = new CustomEvent(name, {\n      detail,\n      cancelable: false,\n      bubbles: true\n    })\n    target.dispatchEvent(event)\n  } catch (error) {\n    if (raise) throw error\n    dispatch(events.clientError, target, { error, ...detail }, true)\n  }\n}\n\nfunction severEventHandler (event) {\n  event.detail.endedAt = new Date().getTime()\n  event.detail.milliseconds = event.detail.endedAt - event.detail.startedAt\n  setTimeout(() => dispatch(events.finish, event.target, event.detail), 10)\n}\naddEventListener(events.serverError, severEventHandler)\naddEventListener(events.success, severEventHandler)\naddEventListener(events.finish, event => activity.remove(event.detail.id), true)\n\nexport default {\n  dispatch,\n  events\n}\n", "import lifecycle from './lifecycle'\n\nfunction findClosestReflex (element) {\n  return element.closest('[data-turbo-reflex]')\n}\n\nfunction findClosestFrame (element) {\n  return element.closest('turbo-frame')\n}\n\nfunction findFrameId (element) {\n  let id = element.dataset.turboFrame\n  if (!id) {\n    const frame = findClosestFrame(element)\n    if (frame) id = frame.id\n  }\n  return id\n}\n\nfunction findFrame (id) {\n  const frame = document.getElementById(id)\n  if (!frame) {\n    const message = `The frame '${id}' does not exist!`\n    lifecycle.dispatch(lifecycle.events.missingFrame, document, { message })\n  }\n  return frame\n}\n\nfunction findFrameSrc (frame) {\n  const frameSrc = frame.dataset.turboReflexSrc || frame.src\n  if (!frameSrc) {\n    const message = `The the 'src' for <turbo-frame id='${frame.id}'> is unknown!\n      TurboReflex uses 'src' to (re)render frame content after the reflex is invoked.\n      Please set the 'src' or 'data-turbo-reflex-src' attribute on the <turbo-frame> element.`\n    lifecycle.dispatch(lifecycle.events.missingFrameSrc, frame, { message })\n  }\n  return frameSrc\n}\n\nfunction assignElementValueToPayload (element, payload = {}) {\n  if (element.tagName.toLowerCase() !== 'select')\n    return (payload.value = element.value)\n\n  if (!element.multiple)\n    return (payload.value = element.options[element.selectedIndex].value)\n\n  payload.values = Array.from(element.options).reduce((memo, option) => {\n    if (option.selected) memo.push(option.value)\n    return memo\n  }, [])\n}\n\nfunction buildAttributePayload (element) {\n  const payload = Array.from(element.attributes).reduce((memo, attr) => {\n    memo[attr.name] = attr.value\n    return memo\n  }, {})\n\n  payload.tag = element.tagName\n  payload.checked = element.checked\n  payload.disabled = element.disabled\n  assignElementValueToPayload(element, payload)\n\n  return payload\n}\n\nexport default {\n  buildAttributePayload,\n  findClosestReflex,\n  findClosestFrame,\n  findFrameId,\n  findFrame,\n  findFrameSrc,\n  get metaElement () {\n    return document.getElementById('turbo-reflex')\n  },\n  get metaElementToken () {\n    return document.getElementById('turbo-reflex').getAttribute('content')\n  }\n}\n", "import elements from './elements'\n\nconst frameSources = {}\n\n// fires before making a turbo HTTP request\naddEventListener('turbo:before-fetch-request', event => {\n  const frame = event.target.closest('turbo-frame')\n  const { fetchOptions } = event.detail\n  fetchOptions.headers['TurboReflex-Token'] = elements.metaElementToken\n})\n\n// fires after receiving a turbo HTTP response\naddEventListener('turbo:before-fetch-response', event => {\n  const frame = event.target.closest('turbo-frame')\n  if (frame) frameSources[frame.id] = frame.src\n})\n\n// fires when a frame element is navigated and finishes loading\naddEventListener('turbo:frame-load', event => {\n  const frame = event.target.closest('turbo-frame')\n  frame.dataset.turboReflexSrc =\n    frameSources[frame.id] || frame.src || frame.dataset.turboReflexSrc\n  delete frameSources[frame.id]\n})\n", "const events = {}\nlet eventListener\n\nfunction register (eventName, tagNames) {\n  events[eventName] = tagNames\n  document.addEventListener(eventName, eventListener, true)\n}\n\nfunction isRegistered (eventName, tagName) {\n  tagName = tagName.toLowerCase()\n  return (\n    events[eventName].includes(tagName) ||\n    (!Object.values(events)\n      .flat()\n      .includes(tagName) &&\n      events[eventName].includes('*'))\n  )\n}\n\nexport default {\n  events,\n  register,\n  isRegistered,\n  set handler (fn) {\n    eventListener = fn\n  }\n}\n", "import elements from '../elements'\n\nfunction invokeReflex (form, payload = {}) {\n  payload.token = elements.metaElementToken\n  const input = document.createElement('input')\n  input.type = 'hidden'\n  input.name = 'turbo_reflex'\n  input.value = JSON.stringify(payload)\n  form.appendChild(input)\n}\n\nexport default { invokeReflex }\n", "function build (urlString) {\n  const a = document.createElement('a')\n  a.href = urlString\n  return new URL(a)\n}\n\nexport default { build }\n", "import urls from '../urls'\nimport elements from '../elements'\n\nfunction invokeReflex (frame, payload) {\n  const src = elements.findFrameSrc(frame)\n  if (!src) return\n  const url = urls.build(src)\n  url.searchParams.set('turbo_reflex', JSON.stringify(payload))\n  frame.src = url.toString()\n}\n\nexport default { invokeReflex }\n", "import elements from '../elements'\nimport lifecycle from '../lifecycle'\nimport urls from '../urls'\n\n// TODO: figure out how to cleanup activity tracker for aborted and errored conditions\n\nfunction aborted (event) {\n  const xhr = event.target\n  dispatch(lifecycle.events.abort, xhr, { ...event.detail })\n}\n\nfunction errored (event) {\n  const xhr = event.target\n  dispatch(\n    lifecycle.events.clientError,\n    xhr,\n    {\n      ...event.detail,\n      error: `Server returned a ${xhr.status} status code! ${xhr.statusText}`\n    },\n    true\n  )\n}\n\nfunction loaded (event) {\n  const xhr = event.target\n  const success = xhr.status >= 200 && xhr.status <= 299\n\n  if (!success) return errored(event)\n\n  const content = xhr.responseText\n  const hijacked = xhr.getResponseHeader('TurboReflex-Hijacked') === 'true'\n\n  if (hijacked) {\n    const head = '<turbo-stream'\n    const tail = '</turbo-stream>'\n    const headIndex = content.indexOf(head)\n    const tailIndex = content.lastIndexOf(tail)\n    if (headIndex >= 0 && tailIndex >= 0) {\n      const streams = content.slice(headIndex, tailIndex + tail.length)\n      document.body.insertAdjacentHTML('beforeend', streams)\n    }\n  } else {\n    const head = '<html'\n    const tail = '</html'\n    const headIndex = content.indexOf(head)\n    const tailIndex = content.lastIndexOf(tail)\n    if (headIndex >= 0 && tailIndex >= 0) {\n      const html = content.slice(content.indexOf('>', headIndex) + 1, tailIndex)\n      document.documentElement.innerHTML = html\n    }\n  }\n}\n\nfunction invokeReflex (payload) {\n  const url = urls.build(window.location.href)\n  url.searchParams.set('turbo_reflex', JSON.stringify(payload))\n  const xhr = new XMLHttpRequest()\n  xhr.open('GET', url, true)\n  xhr.setRequestHeader('TurboReflex-Token', elements.metaElementToken)\n  xhr.addEventListener('abort', aborted)\n  xhr.addEventListener('error', errored)\n  xhr.addEventListener('load', loaded)\n  xhr.send()\n}\n\nexport default { invokeReflex }\n", "import formDriver from './form'\nimport frameDriver from './frame'\nimport windowDriver from './window'\n\nexport default {\n  form: formDriver,\n  frame: frameDriver,\n  window: windowDriver\n}\n", "import lifecycle from './lifecycle'\n\nlet currentLevel = 'unknown'\n\nconst logLevels = {\n  debug: Object.values(lifecycle.events),\n  info: Object.values(lifecycle.events),\n  warn: [\n    lifecycle.events.abort,\n    lifecycle.events.clientError,\n    lifecycle.events.missingFrame,\n    lifecycle.events.missingFrameSrc,\n    lifecycle.events.serverError\n  ],\n  error: [\n    lifecycle.events.clientError,\n    lifecycle.events.missingFrame,\n    lifecycle.events.missingFrameSrc,\n    lifecycle.events.serverError\n  ],\n  unknown: []\n}\n\nObject.values(lifecycle.events).forEach(name => {\n  addEventListener(name, event => {\n    if (logLevels[currentLevel].includes(event.type)) {\n      const level = currentLevel === 'debug' ? 'log' : currentLevel\n      console[level](event.type, event.detail)\n    }\n  })\n})\n\nexport default {\n  get level () {\n    return currentLevel\n  },\n  set level (value) {\n    if (!Object.keys(logLevels).includes(value)) value = 'unknown'\n    return (currentLevel = value)\n  }\n}\n", "function v4 () {\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n    (\n      c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n    ).toString(16)\n  )\n}\n\nexport default { v4 }\n", "import './turbo'\nimport activity from './activity'\nimport delegates from './delegates'\nimport drivers from './drivers'\nimport elements from './elements'\nimport lifecycle from './lifecycle'\nimport logger from './logger'\nimport urls from './urls'\nimport uuids from './uuids'\n\nfunction invokeReflex (event) {\n  let element\n\n  try {\n    element = elements.findClosestReflex(event.target)\n    if (!element) return\n    if (!delegates.isRegistered(event.type, element.tagName)) return\n\n    // payload sent to server (also used for lifecycle event.detail)\n    const payload = {\n      id: `reflex-${uuids.v4()}`,\n      name: element.dataset.turboReflex,\n      driver: null,\n      frameId: null,\n      elementId: element.id.length > 0 ? element.id : null,\n      elementAttributes: elements.buildAttributePayload(element)\n    }\n\n    activity.add(payload)\n    lifecycle.dispatch(lifecycle.events.beforeStart, element, payload)\n\n    const frameId = elements.findFrameId(element)\n    payload.frameId = frameId\n    let frame\n    if (frameId) {\n      frame = elements.findFrame(frameId)\n      if (!frame) return\n    }\n\n    let driver = 'window'\n    if (frame) driver = 'frame'\n    if (element.tagName.toLowerCase() === 'form') driver = 'form'\n\n    payload.driver = driver\n    payload.startedAt = new Date().getTime()\n    lifecycle.dispatch(lifecycle.events.start, element, payload)\n\n    if (driver !== 'form') event.preventDefault()\n    if (driver === 'frame') drivers.frame.invokeReflex(frame, payload)\n    if (driver === 'window') drivers.window.invokeReflex(payload)\n    if (driver === 'form') drivers.form.invokeReflex(element, payload)\n  } catch (error) {\n    lifecycle.dispatch(lifecycle.events.clientError, element, {\n      error,\n      ...payload\n    })\n  }\n}\n\n// wire things up and setup defaults for event delegation\ndelegates.handler = invokeReflex\ndelegates.register('change', ['input', 'select', 'textarea'])\ndelegates.register('submit', ['form'])\ndelegates.register('click', ['*'])\n\nexport default {\n  logger,\n  registerEventDelegate: delegates.register,\n  get eventDelegates () {\n    return { ...delegates.events }\n  },\n  get lifecycleEvents () {\n    return [...Object.values(lifecycle.events)]\n  }\n}\n"],
  "mappings": "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",
  "names": ["active", "add", "payload", "remove", "id", "activity_default", "events", "dispatch", "name", "target", "detail", "raise", "event", "error", "severEventHandler", "activity_default", "lifecycle_default", "findClosestReflex", "element", "findClosestFrame", "findFrameId", "id", "frame", "findFrame", "message", "lifecycle_default", "findFrameSrc", "frameSrc", "assignElementValueToPayload", "payload", "memo", "option", "buildAttributePayload", "attr", "elements_default", "frameSources", "event", "frame", "fetchOptions", "elements_default", "events", "eventListener", "register", "eventName", "tagNames", "isRegistered", "tagName", "delegates_default", "fn", "invokeReflex", "form", "payload", "elements_default", "input", "form_default", "build", "urlString", "a", "urls_default", "invokeReflex", "frame", "payload", "src", "elements_default", "url", "urls_default", "frame_default", "aborted", "event", "xhr", "lifecycle_default", "errored", "loaded", "content", "head", "tail", "headIndex", "tailIndex", "streams", "html", "invokeReflex", "payload", "url", "urls_default", "elements_default", "window_default", "drivers_default", "form_default", "frame_default", "window_default", "currentLevel", "logLevels", "lifecycle_default", "name", "event", "logger_default", "value", "v4", "c", "uuids_default", "invokeReflex", "event", "element", "elements_default", "delegates_default", "payload", "uuids_default", "activity_default", "lifecycle_default", "frameId", "frame", "driver", "drivers_default", "error", "javascript_default", "logger_default"]
}
