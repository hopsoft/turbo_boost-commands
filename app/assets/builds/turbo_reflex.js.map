{
  "version": 3,
  "sources": ["../../javascript/turbo_reflex.js"],
  "sourcesContent": ["const registeredEvents = {}\n\nfunction isMatch (eventName, tagName) {\n  tagName = tagName.toLowerCase()\n  return (\n    registeredEvents[eventName] === tagName ||\n    (!Object.values(registeredEvents).includes(tagName) &&\n      registeredEvents[eventName] === '*')\n  )\n}\n\nfunction getFrameId (reflexElement) {\n  let frameId = reflexElement.dataset.turboReflexFrame\n  frameId = frameId || reflexElement.closest('turbo-frame').id\n  if (!frameId)\n    console.error(\n      `The reflex element does not specify a frame!`,\n      `Please set the 'data-turbo-reflex-frame' attribute.`,\n      reflexElement\n    )\n  return frameId\n}\n\nfunction getFrameElement (frameId) {\n  const frameElement = document.getElementById(frameId)\n  if (!frameElement) console.error(`The frame '${frameId}' does not exist!`)\n  return frameElement\n}\n\nfunction getFrameSrc (frameElement) {\n  const frameSrc = frameElement.dataset.turboReflexFrameSrc\n  if (!frameSrc)\n    console.error(\n      `The 'data-turbo-reflex-frame-src' attribute for the frame '${frameId}' is not set!`,\n      `This attribute is set automatically for frames that load their content after being inserted into the DOM;`,\n      `however, frames that eager load their content server side on initial page render must set this attribute explicitly.`,\n      frameElement\n    )\n  return frameSrc\n}\n\nfunction getURL (value) {\n  const a = document.createElement('a')\n  a.href = value\n  return new URL(a)\n}\n\nfunction getAttributes (reflexElement) {\n  const reflexElementAttributes = Array.from(reflexElement.attributes).reduce(\n    (memo, attribute) => {\n      if (!attribute.name.includes('data-turbo-reflex'))\n        memo[attribute.name] = attribute.value\n      return memo\n    },\n    {}\n  )\n  reflexElementAttributes.tagName = reflexElement.tagName\n  reflexElementAttributes.value = reflexElement.value\n  return reflexElementAttributes\n}\n\nfunction invokeReflex (event) {\n  const reflexElement = event.target.closest('[data-turbo-reflex]')\n  if (!reflexElement) return\n  if (!isMatch(event.type, event.target.tagName)) return\n\n  event.preventDefault()\n  event.stopPropagation()\n\n  const frameId = getFrameId(reflexElement)\n  if (!frameId) return\n\n  const frameElement = getFrameElement(frameId)\n  if (!frameElement) return\n\n  const frameSrc = frameElement.dataset.turboReflexFrameSrc\n  if (!frameSrc) return\n\n  const reflexPayload = {\n    name: reflexElement.dataset.turboReflex,\n    frame: frameId,\n    element: getAttributes(reflexElement)\n  }\n\n  const frameURL = getURL(frameSrc)\n  frameURL.searchParams.set('turbo_reflex', JSON.stringify(reflexPayload))\n  frameElement.src = frameURL.toString()\n}\n\nfunction registerEvent (eventName, tagNames) {\n  tagNames.forEach(\n    tagName => (registeredEvents[eventName] = tagName.toLowerCase())\n  )\n  document.removeEventListener(eventName, invokeReflex, true)\n  document.addEventListener(eventName, invokeReflex, true)\n}\n\nregisterEvent('change', ['input', 'select', 'textarea'])\nregisterEvent('submit', ['form'])\nregisterEvent('click', ['*'])\n\nexport default { registerEvent, registeredEvents }\n"],
  "mappings": "AAAA,IAAMA,EAAmB,CAAC,EAE1B,SAASC,EAASC,EAAWC,EAAS,CACpC,OAAAA,EAAUA,EAAQ,YAAY,EAE5BH,EAAiBE,KAAeC,GAC/B,CAAC,OAAO,OAAOH,CAAgB,EAAE,SAASG,CAAO,GAChDH,EAAiBE,KAAe,GAEtC,CAEA,SAASE,EAAYC,EAAe,CAClC,IAAIC,EAAUD,EAAc,QAAQ,iBACpC,OAAAC,EAAUA,GAAWD,EAAc,QAAQ,aAAa,EAAE,GACrDC,GACH,QAAQ,MACN,+CACA,sDACAD,CACF,EACKC,CACT,CAEA,SAASC,EAAiBD,EAAS,CACjC,IAAME,EAAe,SAAS,eAAeF,CAAO,EACpD,OAAKE,GAAc,QAAQ,MAAM,cAAcF,oBAA0B,EAClEE,CACT,CAcA,SAASC,EAAQC,EAAO,CACtB,IAAMC,EAAI,SAAS,cAAc,GAAG,EACpC,OAAAA,EAAE,KAAOD,EACF,IAAI,IAAIC,CAAC,CAClB,CAEA,SAASC,EAAeC,EAAe,CACrC,IAAMC,EAA0B,MAAM,KAAKD,EAAc,UAAU,EAAE,OACnE,CAACE,EAAMC,KACAA,EAAU,KAAK,SAAS,mBAAmB,IAC9CD,EAAKC,EAAU,MAAQA,EAAU,OAC5BD,GAET,CAAC,CACH,EACA,OAAAD,EAAwB,QAAUD,EAAc,QAChDC,EAAwB,MAAQD,EAAc,MACvCC,CACT,CAEA,SAASG,EAAcC,EAAO,CAC5B,IAAML,EAAgBK,EAAM,OAAO,QAAQ,qBAAqB,EAEhE,GADI,CAACL,GACD,CAACM,EAAQD,EAAM,KAAMA,EAAM,OAAO,OAAO,EAAG,OAEhDA,EAAM,eAAe,EACrBA,EAAM,gBAAgB,EAEtB,IAAME,EAAUC,EAAWR,CAAa,EACxC,GAAI,CAACO,EAAS,OAEd,IAAME,EAAeC,EAAgBH,CAAO,EAC5C,GAAI,CAACE,EAAc,OAEnB,IAAME,EAAWF,EAAa,QAAQ,oBACtC,GAAI,CAACE,EAAU,OAEf,IAAMC,EAAgB,CACpB,KAAMZ,EAAc,QAAQ,YAC5B,MAAOO,EACP,QAASR,EAAcC,CAAa,CACtC,EAEMa,EAAWjB,EAAOe,CAAQ,EAChCE,EAAS,aAAa,IAAI,eAAgB,KAAK,UAAUD,CAAa,CAAC,EACvEH,EAAa,IAAMI,EAAS,SAAS,CACvC,CAEA,SAASC,EAAeC,EAAWC,EAAU,CAC3CA,EAAS,QACPC,GAAYC,EAAiBH,GAAaE,EAAQ,YAAY,CAChE,EACA,SAAS,oBAAoBF,EAAWX,EAAc,EAAI,EAC1D,SAAS,iBAAiBW,EAAWX,EAAc,EAAI,CACzD,CAEAU,EAAc,SAAU,CAAC,QAAS,SAAU,UAAU,CAAC,EACvDA,EAAc,SAAU,CAAC,MAAM,CAAC,EAChCA,EAAc,QAAS,CAAC,GAAG,CAAC,EAE5B,IAAOK,EAAQ,CAAE,cAAAL,EAAe,iBAAAI,CAAiB",
  "names": ["registeredEvents", "isMatch", "eventName", "tagName", "getFrameId", "reflexElement", "frameId", "getFrameElement", "frameElement", "getURL", "value", "a", "getAttributes", "reflexElement", "reflexElementAttributes", "memo", "attribute", "invokeReflex", "event", "isMatch", "frameId", "getFrameId", "frameElement", "getFrameElement", "frameSrc", "reflexPayload", "frameURL", "registerEvent", "eventName", "tagNames", "tagName", "registeredEvents", "turbo_reflex_default"]
}
